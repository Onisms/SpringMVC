<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解自动扫描，只扫描service和dao-->
    <context:component-scan base-package="com.galaxy">
        <!--排除掉controller-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--添加整合Mybatis的配置-->
    <!--加载数据库配置-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

 <!--   &lt;!&ndash;配置SQLSessionFactory&ndash;&gt;
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->

    <!--配置sqlSessionFactory，org.mybatis.spring.SqlSessionFactoryBean
    是mybatis社区开发用于整合Spring的bean-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>helperDialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--之前：加载mapper映射
        现在：扫描到的注解
    -->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.galaxy.dao"/>
    </bean>

    <!--配置事务管理对象:切面-->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> <!--配置事务策略,通知-->
    <tx:advice id="txAdvice" transaction-manager="tx">
        <tx:attributes>
           <!-- <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="select*" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>-->
            <tx:method name="*" isolation="DEFAULT"/>
            <tx:method name="query*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--原来配置的是dao包，现在dao用的是注解来实现的，所以将事务配置到业务处理层-->
    <aop:config>
       <!-- <aop:pointcut id="aopPointCut"
                      expression=" execution(* com.galaxy.service.impl.*.insert*(..))
                      ||execution(* com.galaxy.service.impl.*.update* (..))
                      ||execution(* com.galaxy.service.impl.*.delete* (..))"/>
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="aopPointCut"/>-->
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.galaxy.service.impl.*.*(..))"/>
    </aop:config>


</beans>